<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <title>System Facts</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script crossorigin src="https://unpkg.com/react@17/umd/react.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@17/umd/react-dom.production.min.js"></script>
    <script crossorigin src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>
</head>
<body>
    <div class="container my-4" id="root"></div>
    <script type="text/babel">
    function fetchData() {
      return fetch('/api/hosts').then(r => r.json());
    }

    function App() {
      const [data, setData] = React.useState([]);
      const [search, setSearch] = React.useState('');
      const [cpuFilter, setCpuFilter] = React.useState('');
      const [sortKey, setSortKey] = React.useState('hostname');
      const [sortDir, setSortDir] = React.useState('asc');

      const load = React.useCallback(() => {
        fetchData().then(setData);
      }, []);

      React.useEffect(() => {
        load();
        const t = setInterval(load, 30000);
        return () => clearInterval(t);
      }, [load]);

      const handleSort = key => {
        if (sortKey === key) {
          setSortDir(sortDir === 'asc' ? 'desc' : 'asc');
        } else {
          setSortKey(key);
          setSortDir('asc');
        }
      };

      const filtered = data
        .filter(h => h.hostname.toLowerCase().includes(search.toLowerCase()))
        .filter(h =>
          cpuFilter ? parseFloat(h.cpu_load) <= parseFloat(cpuFilter) : true
        )
        .sort((a, b) => {
          const valA = a[sortKey];
          const valB = b[sortKey];
          if (valA < valB) return sortDir === 'asc' ? -1 : 1;
          if (valA > valB) return sortDir === 'asc' ? 1 : -1;
          return 0;
        });

      return (
        <div>
          <h1 class="mb-4">Collected System Facts</h1>
          <div class="row g-2 mb-3">
            <div class="col-md-6">
              <input
                class="form-control"
                placeholder="Search host"
                value={search}
                onChange={e => setSearch(e.target.value)}
              />
            </div>
            <div class="col-md-6">
              <input
                class="form-control"
                placeholder="Max CPU load"
                value={cpuFilter}
                onChange={e => setCpuFilter(e.target.value)}
              />
            </div>
          </div>
          <table class="table table-striped table-bordered">
            <thead class="table-light">
              <tr>
                <th onClick={() => handleSort('hostname')}>Hostname</th>
                <th onClick={() => handleSort('cpu_load')}>CPU Load</th>
                <th onClick={() => handleSort('memory')}>Memory</th>
                <th onClick={() => handleSort('disk')}>Disk</th>
                <th>Users</th>
                <th>Listening Ports</th>
              </tr>
            </thead>
            <tbody>
              {filtered.map((h, i) => (
                <tr key={i}>
                  <td>{h.hostname}</td>
                  <td>{h.cpu_load}</td>
                  <td>{h.memory}</td>
                  <td>{h.disk}</td>
                  <td>
                    <ul class="mb-0">{h.users.map((u, j) => <li key={j}>{u}</li>)}</ul>
                  </td>
                  <td>
                    <ul class="mb-0">{h.ports.map((p, j) => <li key={j}>{p}</li>)}</ul>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      );
    }

    ReactDOM.render(<App />, document.getElementById('root'));
    </script>
</body>
</html>
